/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.analysis;

import java.util.*;
import sc.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgramme(AProgramme node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleVar(ASimpleVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableauVar(ATableauVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonVideLdvo(ANonVideLdvo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideLdvo(AVideLdvo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonVideLdv(ANonVideLdv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideLdv(AVideLdv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonVideLdvb(ANonVideLdvb node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideLdvb(AVideLdvb node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVariableDv(AVariableDv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATableauDv(ATableauDv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonVideLdf(ANonVideLdf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideLdf(AVideLdf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADf(ADf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIbloc(AIbloc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonVideLi(ANonVideLi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideLi(AVideLi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffectationI(AAffectationI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConditionI(AConditionI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIsinonI(AIsinonI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATantqueI(ATantqueI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelI(AAppelI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocI(ABlocI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetourI(ARetourI node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIaff(AIaff node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIsi(AIsi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIsinon(AIsinon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAItq(AItq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANormalIapp(ANormalIapp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEcrireIapp(AEcrireIapp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANormalApp(ANormalApp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALireApp(ALireApp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonVideLexp(ANonVideLexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideLexp(AVideLexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonVideLexp2(ANonVideLexp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideLexp2(AVideLexp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIret(AIret node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOuExp(AOuExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANivSuivantExp(ANivSuivantExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEtExp1(AEtExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANivSuivantExp1(ANivSuivantExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEgalExp2(AEgalExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInfExp2(AInfExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANivSuivantExp2(ANivSuivantExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExp3(APlusExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMoinsExp3(AMoinsExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANivSuivantExp3(ANivSuivantExp3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultExp4(AMultExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivExp4(ADivExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANivSuivantExp4(ANivSuivantExp4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonExp5(ANonExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANivSuivantExp5(ANivSuivantExp5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParenthesesExp6(AParenthesesExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAppelExp6(AAppelExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarExp6(AVarExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANombreExp6(ANombreExp6 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNombre(TNombre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDotcoma(TDotcoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComa(TComa node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEgal(TEgal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInf(TInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMoins(TMoins node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPo(TPo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPf(TPf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCo(TCo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCf(TCf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAo(TAo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAf(TAf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSi(TSi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAlors(TAlors node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntier(TEntier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSinon(TSinon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTantque(TTantque node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFaire(TFaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRetour(TRetour node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEt(TEt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNon(TNon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLire(TLire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEcrire(TEcrire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaces(TEspaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentaire(TCommentaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
