/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AIsinon extends PIsinon
{
    private PIsi _isi_;
    private TSinon _sinon_;
    private PIbloc _ibloc_;

    public AIsinon()
    {
        // Constructor
    }

    public AIsinon(
        @SuppressWarnings("hiding") PIsi _isi_,
        @SuppressWarnings("hiding") TSinon _sinon_,
        @SuppressWarnings("hiding") PIbloc _ibloc_)
    {
        // Constructor
        setIsi(_isi_);

        setSinon(_sinon_);

        setIbloc(_ibloc_);

    }

    @Override
    public Object clone()
    {
        return new AIsinon(
            cloneNode(this._isi_),
            cloneNode(this._sinon_),
            cloneNode(this._ibloc_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIsinon(this);
    }

    public PIsi getIsi()
    {
        return this._isi_;
    }

    public void setIsi(PIsi node)
    {
        if(this._isi_ != null)
        {
            this._isi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._isi_ = node;
    }

    public TSinon getSinon()
    {
        return this._sinon_;
    }

    public void setSinon(TSinon node)
    {
        if(this._sinon_ != null)
        {
            this._sinon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sinon_ = node;
    }

    public PIbloc getIbloc()
    {
        return this._ibloc_;
    }

    public void setIbloc(PIbloc node)
    {
        if(this._ibloc_ != null)
        {
            this._ibloc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ibloc_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._isi_)
            + toString(this._sinon_)
            + toString(this._ibloc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._isi_ == child)
        {
            this._isi_ = null;
            return;
        }

        if(this._sinon_ == child)
        {
            this._sinon_ = null;
            return;
        }

        if(this._ibloc_ == child)
        {
            this._ibloc_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._isi_ == oldChild)
        {
            setIsi((PIsi) newChild);
            return;
        }

        if(this._sinon_ == oldChild)
        {
            setSinon((TSinon) newChild);
            return;
        }

        if(this._ibloc_ == oldChild)
        {
            setIbloc((PIbloc) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
