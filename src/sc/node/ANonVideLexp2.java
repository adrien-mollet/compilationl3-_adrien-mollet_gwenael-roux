/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ANonVideLexp2 extends PLexp2
{
    private TComa _coma_;
    private PExp _exp_;
    private PLexp2 _lexp2_;

    public ANonVideLexp2()
    {
        // Constructor
    }

    public ANonVideLexp2(
        @SuppressWarnings("hiding") TComa _coma_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") PLexp2 _lexp2_)
    {
        // Constructor
        setComa(_coma_);

        setExp(_exp_);

        setLexp2(_lexp2_);

    }

    @Override
    public Object clone()
    {
        return new ANonVideLexp2(
            cloneNode(this._coma_),
            cloneNode(this._exp_),
            cloneNode(this._lexp2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANonVideLexp2(this);
    }

    public TComa getComa()
    {
        return this._coma_;
    }

    public void setComa(TComa node)
    {
        if(this._coma_ != null)
        {
            this._coma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coma_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public PLexp2 getLexp2()
    {
        return this._lexp2_;
    }

    public void setLexp2(PLexp2 node)
    {
        if(this._lexp2_ != null)
        {
            this._lexp2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lexp2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._coma_)
            + toString(this._exp_)
            + toString(this._lexp2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._coma_ == child)
        {
            this._coma_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._lexp2_ == child)
        {
            this._lexp2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._coma_ == oldChild)
        {
            setComa((TComa) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._lexp2_ == oldChild)
        {
            setLexp2((PLexp2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
